---
name: ci
on:
  push:
  pull_request:
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby:
        - '3.1'
        - '3.0'
        - '2.7'
    env:
      COVERAGE: "${{matrix.coverage}}"
      COVERAGE_TOKEN: "${{secrets.CODACY_PROJECT_TOKEN}}"
      APT_DEPS: libpq-dev libmysqlclient-dev libsqlite3-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install package dependencies
      run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{matrix.ruby}}"
    - name: Install latest bundler
      run: |
        gem install bundler --no-document
        bundle config set without 'tools benchmarks docs'
    - name: Bundle install
      run: bundle install --jobs 4 --retry 3
    - name: Run all tests
      run: bundle exec rake
    - name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@master
      if: env.COVERAGE == 'true' && env.COVERAGE_TOKEN != ''
      with:
        project-token: "${{secrets.CODACY_PROJECT_TOKEN}}"
        coverage-reports: coverage/coverage.xml
    services:
      db:
        image: postgres:10.8
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: ''
          POSTGRES_DB: rom_factory
        ports:
        - 5432:5432
        options: "--health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5"
  release:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags') && github.event_name == 'create'
    needs: tests
    env:
      GITHUB_LOGIN: rom-bot
      GITHUB_TOKEN: "${{secrets.GH_PAT}}"
    steps:
    - uses: actions/checkout@v1
    - name: Install package dependencies
      run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - name: Install dependencies
      run: gem install ossy --no-document
    - name: Trigger release workflow
      run: |
        tag=$(echo $GITHUB_REF | cut -d / -f 3)
        ossy gh w rom-rb/devtools release --payload "{\"tag\":\"$tag\",\"sha\":\"${{github.sha}}\",\"tag_creator\":\"$GITHUB_ACTOR\",\"repo\":\"$GITHUB_REPOSITORY\",\"repo_name\":\"${{github.event.repository.name}}\"}"
